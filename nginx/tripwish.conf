# /etc/nginx/conf.d/default.conf

# (선택) WebSocket용 - conf.d는 http 블록 안에 include되므로 여기 둬도 OK
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
    listen 80;
    server_name moduru.co.kr 3.34.53.245;

    # (필요 시 인증서 자동갱신용 예외)
    # location ^~ /.well-known/acme-challenge/ { root /usr/share/nginx/html; }

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;   # ✅ 변경
    http2 on;         # ✅ 새 문법
    server_name moduru.co.kr 3.34.53.245;

    ssl_certificate     /etc/letsencrypt/live/moduru.co.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/moduru.co.kr/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache   shared:SSL:10m;

    # 1) 프론트 정적 파일
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        index index.html;

        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires 0;
    }

    # 2) LiveKit (RTC)
    location = /livekit { return 301 /livekit/; }
    location /livekit/ {
        proxy_pass http://livekit:7880/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;  # ✅ 일관
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        proxy_buffering off;
    }

    # 3) WebSocket(STOMP)
    location /api/ws-stomp/ {
        proxy_pass http://backend:8080/ws-stomp/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;  # ✅
        proxy_set_header Host $host;
        proxy_read_timeout 600s;
    }

    # 4) Spring Boot API
    location /api/ {
        proxy_pass http://backend:8080/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 600s;
    }

    # 5) Node 토큰 발급
    location = /api/signal/token {
        proxy_pass http://node-backend:4000/get-token;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 30s;
    }

    # 6) LiveKit Webhook -> Node
    location /livekit/webhook {
        proxy_pass http://node-backend:4000/livekit/webhook;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        client_max_body_size 2m;
    }
}
