server {
    listen 80;
    server_name moduru.co.kr 3.34.53.245;

    # HTTP → HTTPS 리다이렉트 (SSL 쓸 경우)
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name moduru.co.kr 3.34.53.245;

    # SSL 인증서 위치 (Let's Encrypt 기준)
    ssl_certificate     /etc/letsencrypt/live/moduru.co.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/moduru.co.kr/privkey.pem;

    # 보안 옵션
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache   shared:SSL:10m;


    # 1. 프론트 정적 파일 (React/Vite 빌드 결과)
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        index index.html; # index 지시문 추가

        # 캐시 무효화 (기존 4번 블록 내용)
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires 0;
    }

    # 4. RTC 연결 
    location ^~ /livekit {
        proxy_pass http://livekit:7880;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_read_timeout 300s;
    }

    # 2. WebSocket 프록시
    location /api/ws-stomp/ {
        proxy_pass http://backend:8080/ws-stomp/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;

    }
    # 3. Spring Boot 백엔드 API 프록시
    location /api/ {
        proxy_pass http://backend:8080/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Cookie $http_cookie;
        # 임시로 location 안에 추가
        proxy_set_header X-Original-URI $request_uri;


    }


    # (Node.js 소켓 프록시는 나중에 필요할 때만 주석 해제)
    location = /api/livekit/token {
        proxy_pass http://node-backend:4000/get-token;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}