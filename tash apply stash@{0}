[1mdiff --git a/back/src/main/java/com/B108/tripwish/config/WebSocketConfig.java b/back/src/main/java/com/B108/tripwish/config/WebSocketConfig.java[m
[1mnew file mode 100644[m
[1mindex 0000000..4eb7acc[m
[1m--- /dev/null[m
[1m+++ b/back/src/main/java/com/B108/tripwish/config/WebSocketConfig.java[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mpackage com.B108.tripwish.config;[m
[32m+[m
[32m+[m[32mimport org.springframework.context.annotation.Configuration;[m
[32m+[m[32mimport org.springframework.messaging.simp.config.MessageBrokerRegistry;[m
[32m+[m[32mimport org.springframework.web.socket.config.annotation.*;[m
[32m+[m
[32m+[m[32m@Configuration[m
[32m+[m[32m@EnableWebSocketMessageBroker[m
[32m+[m[32mpublic class WebSocketConfig implements WebSocketMessageBrokerConfigurer {[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void registerStompEndpoints(StompEndpointRegistry registry) {[m
[32m+[m[32m        System.out.println("[+] STOMP 엔드포인트 등록 (/ws-stomp)");[m
[32m+[m[32m        registry.addEndpoint("/ws-stomp") // 클라이언트가 연결할 기본 WebSocket endpoint[m
[32m+[m[32m                .setAllowedOrigins("*")[m
[32m+[m[32m                .withSockJS(); // fallback: WebSocket이 안 되면 SockJS로 대체[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void configureMessageBroker(MessageBrokerRegistry registry) {[m
[32m+[m[32m        // /app으로 시작하는 메시지는 @MessageMapping으로 매핑[m
[32m+[m[32m        registry.setApplicationDestinationPrefixes("/app");[m
[32m+[m
[32m+[m[32m        // /topic으로 시작하는 메시지는 클라이언트가 subscribe 가능한 pub/sub 채널[m
[32m+[m[32m        registry.enableSimpleBroker("/topic");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/back/src/main/java/com/B108/tripwish/websocket/controller/ScheduleSocketController.java b/back/src/main/java/com/B108/tripwish/websocket/controller/ScheduleSocketController.java[m
[1mnew file mode 100644[m
[1mindex 0000000..d424db3[m
[1m--- /dev/null[m
[1m+++ b/back/src/main/java/com/B108/tripwish/websocket/controller/ScheduleSocketController.java[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32mpackage com.B108.tripwish.websocket.controller;[m
[32m+[m
[32m+[m[32mimport com.B108.tripwish.websocket.dto.ScheduleMessage;[m
[32m+[m[32mimport lombok.extern.slf4j.Slf4j;[m
[32m+[m[32mimport org.springframework.messaging.handler.annotation.DestinationVariable;[m
[32m+[m[32mimport org.springframework.messaging.handler.annotation.MessageMapping;[m
[32m+[m[32mimport org.springframework.messaging.handler.annotation.Payload;[m
[32m+[m[32mimport org.springframework.messaging.handler.annotation.SendTo;[m
[32m+[m[32mimport org.springframework.stereotype.Controller;[m
[32m+[m
[32m+[m[32m@Slf4j[m
[32m+[m[32m@Controller[m
[32m+[m[32mpublic class ScheduleSocketController {[m
[32m+[m
[32m+[m[32m    // 클라이언트가 /app/room/{roomId}/schedule로 보낸 메시지 처리[m
[32m+[m[32m    @MessageMapping("/room/{roomId}/schedule")[m
[32m+[m[32m    @SendTo("/topic/room/{roomId}/schedule")[m
[32m+[m[32m    public ScheduleMessage handleScheduleMessage([m
[32m+[m[32m            @DestinationVariable String roomId,[m
[32m+[m[32m            @Payload ScheduleMessage message[m
[32m+[m[32m    ){[m
[32m+[m[32m        log.info("📝 일정 편집 메시지 수신 - roomId={}, data={}", roomId, message);[m
[32m+[m[32m        return message; // 일정편집에선 DB에 저장 안하고 그대로 브로드캐스트[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/back/src/main/java/com/B108/tripwish/websocket/dto/ScheduleMessage.java b/back/src/main/java/com/B108/tripwish/websocket/dto/ScheduleMessage.java[m
[1mnew file mode 100644[m
[1mindex 0000000..e9ca3f6[m
[1m--- /dev/null[m
[1m+++ b/back/src/main/java/com/B108/tripwish/websocket/dto/ScheduleMessage.java[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32mpackage com.B108.tripwish.websocket.dto;[m
[32m+[m
[32m+[m[32mimport lombok.*;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDate;[m
[32m+[m
[32m+[m[32m@Getter[m
[32m+[m[32m@Setter[m
[32m+[m[32m@NoArgsConstructor[m
[32m+[m[32m@AllArgsConstructor[m
[32m+[m[32m@ToString[m
[32m+[m[32mpublic class ScheduleMessage {[m
[32m+[m[32m    private Long itemId;[m
[32m+[m[32m    private Long userId;[m
[32m+[m[32m    private String action; // MOVE, EDIT, DELETE[m
[32m+[m
[32m+[m[32m    private LocalDate date; // 여행 날짜[m
[32m+[m[32m    private Integer day; // 몇번째 날인지[m
[32m+[m[32m    private String startTime; // 시작 시간[m
[32m+[m[32m    private String endTime; // 끝 시간[m
[32m+[m[32m    private Integer orderIn; // 하루 내 장소 순서[m
[32m+[m[32m    private String memo; // 메모[m
[32m+[m[32m}[m
[1mdiff --git a/back/src/main/resources/application.properties b/back/src/main/resources/application.properties[m
[1mindex 1e96439..ba3118b 100644[m
[1m--- a/back/src/main/resources/application.properties[m
[1m+++ b/back/src/main/resources/application.properties[m
[36m@@ -4,7 +4,7 @@[m [mspring.application.name=tripwish[m
 # DB ?? ??[m
 spring.datasource.url=jdbc:postgresql://localhost:5432/postgres[m
 spring.datasource.username=postgres[m
[31m-spring.datasource.password=moduru[m
[32m+[m[32mspring.datasource.password=ssafy[m
 spring.datasource.driver-class-name=org.postgresql.Driver[m
 [m
 # JPA ??[m
