services:
  ##########################################
  # 1. 프론트엔드 (React/Vite 등)
  ##########################################
  frontend:
    build:
      context: ./front/moduru
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks: [app-network]

  ##########################################
  # 2. 백엔드 (Spring Boot)
  ##########################################
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8080:8080"
    env_file: .env
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/mydb
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - EMAIL_ID=${EMAIL_ID}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - KAKAO_API_KEY=${KAKAO_API_KEY}
      - SPRING_MAIL_HOST=smtp.gmail.com
      - SPRING_MAIL_PORT=587
      - SPRING_MAIL_USERNAME=${EMAIL_ID}
      - SPRING_MAIL_PASSWORD=${EMAIL_PASSWORD}
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=true
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=true
      # - AI_BASE_URL=http://ai-server:8000
    networks: [app-network]

  ##########################################
  # 3. 백엔드 (Node.js)
  ##########################################
  node-backend:
    build:
      context: ./back-node
    ports:
      - "4000:4000"
    env_file: .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: always
    networks: [app-network]

  ##########################################
  # 4. FastAPI(AI 서버)
  ##########################################
  ai-server:
    build:
      context: ./ai
      dockerfile: Dockerfile
    container_name: ai-server
    env_file:
      - ./ai/.env
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=mydb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=ssafy
      - PYTHONUNBUFFERED=1
    networks: [app-network]

  ##########################################
  # 5. nginx(리버스 프록시) — 운영시에만
  ##########################################
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    profiles: ["prod"]   # 개발 기본 미실행
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/tripwish.conf:/etc/nginx/conf.d/default.conf:ro
      - ./front/moduru/dist:/usr/share/nginx/html:ro
      - /etc/letsencrypt/live/moduru.co.kr:/etc/letsencrypt/live/moduru.co.kr:ro
      - /etc/letsencrypt/archive/moduru.co.kr:/etc/letsencrypt/archive/moduru.co.kr:ro
    networks: [app-network]

  ##########################################
  # 6. 데이터 로더(유틸) — 필요 시만
  ##########################################
  data-loader:
    image: python:3.11-slim
    container_name: data-loader
    profiles: ["tools"]  # 기본 미실행
    working_dir: /app
    volumes:
      - ./ai:/app
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      POSTGRES_DB: mydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ssafy
    command: ["sleep", "infinity"]
    networks: [app-network]

networks:
  app-network:
    external: true
    name: moduru_net
