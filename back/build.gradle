plugins {
	id 'java'
	id 'com.diffplug.spotless' version '6.25.0'
	id 'org.springframework.boot' version '3.1.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.B108'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
	}
}

spotless {
	java {
		googleJavaFormat("1.17.0")
		importOrder("java", "javax", "org", "com", "")
		removeUnusedImports()
	}
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Devtools (자동 리로딩)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// JPA (데이터베이스 연동)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// H2 Database (개발용 인메모리 DB, 선택)
	runtimeOnly 'com.h2database:h2'

	// postgreSql
	implementation 'org.postgresql:postgresql:42.7.3'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// JWT (io.jsonwebtoken)
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 처리를 위한 Jackson 연동

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Elasticsearch
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

}

tasks.named('test') {
	useJUnitPlatform()
}
